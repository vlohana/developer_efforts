{"version":3,"sources":["basics.js","../../../../../.nvm/versions/node/v14.18.3/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_img","_interopRequireDefault","require","_img2","e","__esModule","default","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","Array","from","test","isArray","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","console","log","wait","seconds","setTimeout","countries","document","querySelector","images","createImage","imagePath","reject","img","createElement","src","addEventListener","append","concat","currentImage","renderCountry","data","common","countryName","languages","join","currenciesKeys","currencies","html","flags","png","region","Number","population","toFixed","insertAdjacentHTML","getPosition","navigator","geolocation","getCurrentPosition","whereAmI","_ref","_callee","pos","_pos$coords","lat","longi","resGeo","dataGeop","resp","_yield$resp$json","_yield$resp$json2","_callee$","_context","coords","latitude","longitude","fetch","ok","status","json","country","city","_callee2","_callee2$","_context2","t0","message","getJSONResponse","url","errMsg","undefined","timeout","sec","_","get3CountriesData","_ref3","_callee3","c1","c2","c3","_yield$getJSONRespons","_yield$getJSONRespons2","data1","_yield$getJSONRespons3","_yield$getJSONRespons4","data2","_yield$getJSONRespons5","_yield$getJSONRespons6","data3","_callee3$","_context3","capital","_x","_x2","_x3","get3CountriesDataPromiseAll","_ref4","_callee4","_callee4$","_context4","all","map","_x4","_x5","_x6","_callee5","res","_callee5$","_context5","race","err","allSettled","out","any","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","stack","overlay","createErrorOverlay","body","appendChild","getElementById","remove","stackTrace","innerText","innerHTML","getParents","modules","parents","k","dep","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"basics.3c28469c.js","sourceRoot":"..","sourcesContent":["console.log(\"hello\");\n\nimport image1Path from \"./img/img-1.jpg\";\nimport image2Path from \"./img/img-2.jpg\";\n\n// const countryName = \"PORTUGAL\";\n// const request = fetch(`https://restcountries.com/v3.1/name/${countryName}`)\n//   .then((response) => response.json())\n//   .then((countrydata) => {\n//     const [data] = countrydata;\n//     // console.log(data);\n//     return fetch(`https://restcountries.com/v3.1/name/${data.borders[0]}`);\n//   })\n//   .then((response) => response.json())\n//   .then((data2) => {\n//     const [data] = data2;\n//     // console.log(data);\n//   });\n\nconst wait = (seconds) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, 1000 * seconds);\n  });\n};\n\n// wait(1).then(() => console.log(\"waited for 1\"));\n// wait(2).then(() => console.log(\"waited for 2\"));\n// wait(3).then(() => console.log(\"waited for 3\"));\nconst countries = document.querySelector(\".countries\");\nconst images = document.querySelector(\".images\");\n\nconst createImage = function (imagePath) {\n  return new Promise(function (resolve, reject) {\n    const img = document.createElement(\"img\");\n    img.src = imagePath;\n\n    // if resolved appen image to images\n    img.addEventListener(\"load\", () => {\n      images.append(img);\n      resolve(img);\n    });\n    // if resolved appen image to images\n    img.addEventListener(\"error\", () => {\n      reject(new Error(`image not found in path ${imagePath}`));\n    });\n  });\n};\n\nlet currentImage;\n\n// createImage(image1Path)\n//   .then((img) => {\n//     currentImage = img;\n//     console.log(\"image1  loaded\");\n//     return wait(2);\n//   })\n//   .then(() => {\n//     currentImage.style.display = \"none\";\n//     return createImage(image2Path);\n//   })\n//   .then((newImg) => {\n//     currentImage = newImg;\n//     console.log(\"image2 loaded\");\n//     return wait(2);\n//   })\n//   .then(() => {\n//     currentImage.style.display = \"none\";\n//   })\n//   .catch((err) => console.log(err));\n\nconst renderCountry = function (data) {\n  console.log(\"data\", data.name.common);\n  const countryName = data.name.common;\n  const languages = Object.values(data.languages).join(\", \");\n  const currenciesKeys = Object.keys(data.currencies);\n  const html = `\n        <article class=\"country\">\n            <img class=\"country__img\" src=\"${data.flags.png}\"/>\n            <div class=\"country_data\">\n                <h3 className=\"country__name\">${countryName}</h3>\n                <h4 className=\"country__region\">${data.region}</h4>\n                <p className=\"country__row\"><span>👫</span>${(\n                  Number(data.population) / 10000000\n                ).toFixed(1)} million pople</p>\n                <p className=\"country__row\"><span>🗣️</span>${languages}</p>\n                <p className=\"country__row\"><span>💰</span>\n                ${data.currencies[currenciesKeys[0]][\"name\"]} ${\n    data.currencies[currenciesKeys[0]][\"symbol\"]\n  }</p>\n            </div>\n        </articl>\n    `;\n  countries.insertAdjacentHTML(\"afterend\", html);\n};\n\nconst getPosition = () => {\n  return new Promise(function (resolve, reject) {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n};\n// const whereAmI = async function (country)\nconst whereAmI = async function () {\n  const pos = await getPosition();\n  const { latitude: lat, longitude: longi } = pos.coords;\n  //   console.log(latitude, \", \", longitude);\n  const resGeo = await fetch(`https://geocode.xyz/${lat},${longi}?geoit=json`);\n  //   console.log(\"output geo\", await resGeo.json());\n  if (!resGeo.ok) throw new Error(resGeo.status);\n  const dataGeop = await resGeo.json();\n  //   console.log(dataGeop);\n  const resp = await fetch(\n    `https://restcountries.com/v3.1/name/${dataGeop.country}`\n  );\n  const [data] = await resp.json();\n  //   console.log(data);\n  renderCountry(data);\n  //   console.log(`2. You are in city ${dataGeop.city}`);\n  return `2. You are in city ${dataGeop.city} ${dataGeop.country}`;\n};\n\nconsole.log(`1. Will get location`);\n// whereAmI(\"INDIA\"); // await only applies to the async function\n// whereAmI().then((city) => console.log(city));\n(async function () {\n  try {\n    const city = await whereAmI();\n    console.log(city);\n  } catch (err) {\n    console.log(err.message);\n  }\n  console.log(\"3: after async: Finished Gettting the location\");\n})();\n\nconst getJSONResponse = (url, errMsg = \"Something went wrong\") => {\n  return fetch(url)\n    .then((resp) => {\n      if (!resp.ok) {\n        throw new Error(`${errMsg} (${resp.status})`);\n      }\n      return resp.json();\n    })\n    .catch(errMsg);\n};\n\nconst timeout = (sec) => {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(\"Request took too long!\"));\n    }, sec * 1000);\n  });\n};\n\n// here api waits for one api to fulfill and then proceed to other in an order inside a function\nconst get3CountriesData = async (c1, c2, c3) => {\n  try {\n    const [data1] = await getJSONResponse(\n      `https://restcountries.com/v3.1/name/${c1}`\n    );\n    const [data2] = await getJSONResponse(\n      `https://restcountries.com/v3.1/name/${c2}`\n    );\n    const [data3] = await getJSONResponse(\n      `https://restcountries.com/v3.1/name/${c3}`\n    );\n    console.log([data1.capital, data2.capital, data3.capital].join());\n  } catch (error) {\n    console.log(error);\n  }\n};\n// get3CountriesData(\"INDIA\", \"AUSTRALIA\", \"Thailand\");\n//================================== PROMISES ===================================================================================================\n\n// ==================== Run promises in Parallel ====================\n\n//================================== PROMISE ALL ===================================================================================================\n\n/*\n1. Promise.all : trigger all promises and returns promises if all the promises gets fullfilled\n                short circuits if either of the promises is rejected.\n*/\nconst get3CountriesDataPromiseAll = async (c1, c2, c3) => {\n  try {\n    const data = await Promise.all([\n      getJSONResponse(`https://restcountries.com/v3.1/name/${c1}`),\n      getJSONResponse(`https://restcountries.com/v3.1/name/${c2}`),\n      getJSONResponse(`https://restcountries.com/v3.1/name/${c3}`),\n    ]);\n    data.map((d) => console.log(d[0].capital));\n  } catch (error) {\n    console.log(error);\n  }\n};\n// get3CountriesDataPromiseAll(\"INDIA\", \"AUSTRALIA\", \"Thailand\");\n\n//================================== PROMISE RACE ===================================================================================================\n/**\n * 2. Promise.race: the prmoise is returns single promise as soons as one of the promise is settled/rejected\n * the winner of the race is returned\n *\n * SIMPLE WORDS: GIVE ME THE WINNER (GOOD OR BAD)\n */\n//ex1\n(async function () {\n  const res = await Promise.race([\n    getJSONResponse(`https://restcountries.com/v3.1/name/germany`),\n    getJSONResponse(`https://restcountries.com/v3.1/name/italy`),\n    getJSONResponse(`https://restcountries.com/v3.1/name/japan`),\n  ]);\n  console.log(\"race::::\", res[0]);\n})();\n\n//EX 2\nPromise.race([\n  getJSONResponse(\"https://restcountries.com/v3.1/name/egypt\"),\n  timeout(0.05),\n])\n  .then((res) => console.log(res))\n  .catch((err) => console.log(\"timeout race demo response\", err));\n\n//================================== PROMISE ALL SETTLED ===================================================================================================\n/**\n *  Promise all settled returns all settled promises waits for promises to get (resolve or reject)\n *  SIMPLE WORDS: I DONT CARE I NEED EVERYTHIG FAIL AND PASS\n */\nPromise.allSettled([\n  Promise.resolve(\"allsettled:::: SUCCESS\"),\n  Promise.reject(\"allsettled:::: ERROR\"),\n  Promise.resolve(\"allsettled:::: ANOTHER SUCCESS\"),\n])\n  .then((out) => console.log(out))\n  .catch((err) => console.log(err));\n// OUTPUT: [SUCCESS,ERROR,ANOTHER SUCCESS]\n\n/** ALL will come out as soon as one of the promise get rejected\n * SIMPLE words all or nothing\n *\n */\nPromise.all([\n  Promise.resolve(\"ALL:::: SUCCESS\"),\n  Promise.reject(\"ALL:::: ERROR\"),\n  Promise.resolve(\"ALL:::: ANOTHER SUCCESS\"),\n])\n  .then((out) => console.log(out))\n  .catch((err) => console.log(err));\n// output:[ERROR]\n\n//================================== PROMISE ANY ===================================================================================================\n/** RETURNS FIRST SUCCESSFUL OR RESOLVED PROMISE\n * SIMPLE WORDS I WANT THE WINNER\n *\n */\n\nPromise.any([\n  Promise.reject(\"any:::: ERROR\"),\n  Promise.resolve(\"any:::: ANOTHER SUCCESS\"),\n  Promise.resolve(\"any:::: SUCCESS\"),\n])\n  .then((out) => console.log(out))\n  .catch((err) => console.log(err));\n// output:[ERROR]\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}