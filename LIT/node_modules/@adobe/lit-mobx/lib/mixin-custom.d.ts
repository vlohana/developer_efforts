import { ReactiveElement } from 'lit';
import type { Reaction } from 'mobx';
export type ReactiveElementConstructor = new (...args: any[]) => ReactiveElement;
export interface ReactionConstructor {
    new (...args: any[]): Reaction;
}
/**
 * A class mixin which can be applied to lit-element's
 * [ReactiveElement](https://lit.dev/docs/api/ReactiveElement/)
 * derived classes. This mixin adds a mobx reaction which tracks the update method of ReactiveElement.
 *
 * Any observables used in the render template of the element will be tracked by a reaction
 * and cause an update of the element upon change.
 *
 * @param constructor the constructor to extend from to add the mobx reaction, must be derived from ReactiveElement.
 * @param reaction a constructor for the Reaction implementation from mobx, used to provide custom Reactions and
 * makes it easier to handle multiple versions of mobx within a single application.
 */
export declare function MobxReactionUpdateCustom<T extends ReactiveElementConstructor>(constructor: T, ReactionConstructor: ReactionConstructor): T;
//# sourceMappingURL=mixin-custom.d.ts.map