{"version":3,"file":"PersonStore-1.js","sourceRoot":"","sources":["../../../src/tip-calculator/store/PersonStore-1.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAkB,UAAU,EAAe,MAAM,MAAM,CAAC;AAEhF,MAAM,cAAc,GAAG,GAAG,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;AAE/E,MAAM,OAAO,WAAW;IAWtB,cAAc;IACd,8BAA8B;IAG9B;;;;;;;;;;;OAWG;IAEH,eAAe,CAAC,IAAY;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,YAAY,IAAY;QA9BxB;;;;;WAKG;QAEH;;;;;WAAkB;QAwBhB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,uBAAuB;IACzB,CAAC;CAEF;AA5BC;IADC,UAAU;;8CACO;AAmBlB;IADC,MAAM;;;;kDAGN;AASH,MAAM,MAAM,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;AACxC,OAAO,CAAC,GAAG,EAAE;IACX,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAE,kCAAkC;AACtF,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC","sourcesContent":["import { action, autorun, makeObservable, observable, runInAction } from \"mobx\";\n\nconst waitForPromise = () => new Promise(resolve => setTimeout(resolve, 1000));\n\nexport class PersonStore {\n\n  /**\n   * is State in MobX we want to track in our application\n   * can be defined using observable decorator or function \n   * evrything written inside observable block makes it as obsevable.\n   * \n   */\n  @observable\n  firstName: string;\n\n  // @observable\n  // lastName: string = \"Lohana\"\n\n\n  /**\n   * . Use to update the state \n   * . There are 3 ways to update state with actions\n   *         -> decorator\n   *         -> action function\n   *         -> \"runInAction\" function\n   * . All updates inside the action are batched.\n   * . Actions do not support async execution so everything updated after the async code will be\n   *   executed in next batch\n   * . \n   * @param fName \n   */\n  @action\n  updateFirstName(name: string) {\n    this.firstName = name;\n  }\n\n  constructor(name: string) {\n    this.firstName = name;\n    // makeObservable(this)\n  }\n\n}\n\nconst person = new PersonStore('Vinod');\nautorun(() => {\n  console.log('Person name is', person.firstName);  // Access observable property here\n});\n\nperson.updateFirstName(\"Vikki Lohana\");"]}