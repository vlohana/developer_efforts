{"version":3,"file":"TipStore.js","sourceRoot":"","sources":["../../../src/tip-calculator/store/TipStore.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,UAAU,EAAY,MAAM,MAAM,CAAA;AAG7E,MAAM,QAAQ;IAeV,aAAa,CAAC,UAAkB;QAC5B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAClC,CAAC;IAGD,sBAAsB,CAAC,MAAc;QACjC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAGD,yBAAyB,CAAC,MAAc;QACpC,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC;IACvC,CAAC;IAGD,0BAA0B,CAAC,MAAc;QACrC,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC;IACxC,CAAC;IAED,IACI,gBAAgB;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,IACI,aAAa;QACb,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,CAAC,OAAO,EAAE,CAAC,CAAA;QAC9C,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,IACI,kBAAkB;QAClB,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAA;QAC3D,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACrC,CAAC;IAED,IACI,mBAAmB;QACnB,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAA;QAC5D,OAAO,IAAI,CAAC,qBAAqB,CAAC;IACtC,CAAC;IAGD,IACI,eAAe;QAChB,OAAQ,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAA;IAC7H,CAAC;IAED,yDAAyD;IACzD,qDAAqD;IACrD,KAAK;IAEL;QAhEQ;;;;mBAAsB,CAAC;WAAC;QAGxB;;;;mBAAkB,CAAC;WAAC;QAGpB;;;;mBAA+B,CAAC;WAAC;QAGjC;;;;mBAAgC,CAAC;WAAC;QAwDtC,cAAc,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;CAGJ;AArEW;IADP,UAAU;;6CACqB;AAGxB;IADP,UAAU;;yCACiB;AAGpB;IADP,UAAU;;sDAC8B;AAGjC;IADP,UAAU;;uDAC+B;AAG1C;IADC,MAAM;;;;6CAGN;AAGD;IADC,MAAM;;;;sDAGN;AAGD;IADC,MAAM;;;;yDAGN;AAGD;IADC,MAAM;;;;0DAGN;AAED;IAAC,QAAQ;;;gDAGR;AAED;IAAC,QAAQ;;;6CAIR;AAED;IAAC,QAAQ;;;kDAIR;AAED;IAAC,QAAQ;;;mDAIR;AAGD;IAAC,QAAQ;;;+CAGR;AAYL,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC","sourcesContent":["import { action, computed, makeObservable, observable, reaction } from \"mobx\"\n\n\nclass TipStore {\n\n    @observable\n    private _billAmount: number = 0;\n\n    @observable\n    private _rating: number = 0;\n\n    @observable\n    private _ratingByFirstPerson: number = 0;\n\n    @observable\n    private _ratingBySecondPerson: number = 0;\n\n    @action\n    setBillAmount(billAmount: number) {\n        this._billAmount = billAmount;\n    }\n\n    @action\n    updateRatingForService(choice: number) {\n        this._rating = choice;\n    }\n\n    @action\n    updateRatingByFirstPerson(choice: number) {\n        this._ratingByFirstPerson = choice;\n    }\n\n    @action\n    updateRatingBySecondPerson(choice: number) {\n        this._ratingBySecondPerson = choice;\n    }\n\n    @computed\n    get actualBillAmount() {\n        return this._billAmount;\n    }\n\n    @computed\n    get currentRating() {\n        console.log(`changed rating: ${this._rating}`)\n        return this._rating;\n    }\n\n    @computed\n    get currentFirstRating() {\n        console.log(`changed rating: ${this._ratingByFirstPerson}`)\n        return this._ratingByFirstPerson;\n    }\n\n    @computed\n    get currentSecondRating() {\n        console.log(`changed rating: ${this._ratingBySecondPerson}`)\n        return this._ratingBySecondPerson;\n    }\n\n\n    @computed\n    get finalBillAmount(){\n       return  this.actualBillAmount + (this.actualBillAmount) * ((this.currentFirstRating + this.currentSecondRating) / 2) / 100\n    }\n\n    // disposerRating1 = reaction(() => this._rating, () => {\n    //     console.log(`rating changed: ${this._rating}`)\n    // })\n\n    constructor() {\n        makeObservable(this);\n    }\n\n\n}\nexport const tipStore = new TipStore();\n"]}