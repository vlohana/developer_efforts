{"version":3,"file":"PersonStore-v2.js","sourceRoot":"","sources":["../../../src/tip-calculator/store/PersonStore-v2.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAU,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,MAAM,CAAC;AAG9E,kFAAkF;AACjF,MAAM,cAAc,GAAG,GAAG,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AAGnF,MAAM,MAAM;IASV,iDAAiD;IACjD,UAAU;IACV,kCAAkC;IAClC,qCAAqC;IACrC,2BAA2B;IAC3B,IAAI;IAEJ,gDAAgD;IAChD,UAAU;IACV,qCAAqC;IACrC,oCAAoC;IACpC,8BAA8B;IAC9B,IAAI;IAEJ,mDAAmD;IACnD,UAAU;IACV,wDAAwD;IACxD,gCAAgC;IAChC,8BAA8B;IAC9B,IAAI;IAGJ,YAAY,KAAa,EAAE,QAAgB;QA5B3C;;;;;WAAkB;QAGlB;;;;;WAAiB;QA0Bf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,yBAAyB;QACzB,cAAc,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;CACF;AAlCC;IADC,UAAU;;yCACO;AAGlB;IADC,UAAU;;wCACM;AAiCnB,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC7C,OAAO,CAAC,GAAG,EAAE;IACX,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC;AAEH,WAAW,CAAC,KAAK,IAAI,EAAE;IACrB,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC;IAC3B,MAAM,cAAc,EAAE,CAAC;IACvB,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAA;AAC5B,CAAC,CAAC,CAAA;AACF,8DAA8D;AAC9D,+DAA+D;AAE/D,4CAA4C","sourcesContent":["import { action, autorun, makeObservable, observable, runInAction } from \"mobx\";\nimport { resolve } from \"path\";\n\n  //  const waitForPromise = () => new Promise(resolve => setTimeout(resolve, 5000))\n   const waitForPromise = () => new Promise(resolve => setTimeout(resolve, 10000));\n\n\nclass Person {\n\n  @observable\n  firstName: string;\n\n  @observable\n  lastName: string;\n\n\n  /** When first name is updated this is invoked */\n  // @action\n  // updateFirstName(name: string) {\n  //   console.log('updated firstname')\n  //   this.firstName = name;\n  // }\n\n  /** When last name is updated this is invoked */\n  // @action\n  // updateLastName(lastName: string) {\n  //   console.log('updated lastname')\n  //   this.lastName = lastName;\n  // }\n\n  /** batching the actions call to invoke one call */\n  // @action\n  // updateFullName(firstName: string, lastName: string) {\n  //   this.firstName = firstName;\n  //   this.lastName = lastName;\n  // }\n\n\n  constructor(fName: string, lastName: string) {\n    this.firstName = fName;\n    this.lastName = lastName;\n    // Enable MobX decorators\n    makeObservable(this);\n  }\n}\n\nconst person = new Person('Vinod', \"Lohana\");\nautorun(() => {\n  console.log('Person name is', person.firstName, person.lastName);\n});\n\nrunInAction(async () => {\n  person.firstName = \"VIkki\";\n  await waitForPromise();\n  person.lastName = \"Lohana\"\n})\n// person.updateFirstName(\"Vikki\"); // invoke firstname action\n// person.updateLastName(\"Chachwani\") // invoke lastname action\n\n// person.updateFullName(\"Vikki\", \"Lohana\");\n\n"]}