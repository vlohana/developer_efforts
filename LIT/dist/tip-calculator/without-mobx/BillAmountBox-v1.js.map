{"version":3,"file":"BillAmountBox-v1.js","sourceRoot":"","sources":["../../../src/tip-calculator/without-mobx/BillAmountBox-v1.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAA;AACtC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AACjD,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAA;AAE5C,MAAM,OAAO,aAAc,SAAQ,UAAU;IAA7C;;QAEI,6BAA6B;QAE7B;;;;mBAAsB,CAAC;WAAC;QAGxB;;;;mBAAY,CAAC;WAAC;QAsBd;;;;mBAAqB,CAAC,CAAQ,EAAE,EAAE;gBAC9B,MAAM,MAAM,GAAG,CAAC,CAAC,MAA0B,CAAC;gBAC5C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACxC,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,gBAAgB,EAAE;oBACjD,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE;oBACpC,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC,CAAA;YACP,CAAC;WAAA;IACL,CAAC;IA7BG,MAAM;QACF,OAAO,IAAI,CAAA;;;;;qBAKE,IAAI,CAAC,WAAW;qBAChB,IAAI,CAAC,kBAAkB;iBAC3B,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC;;+BAE1C,IAAI,CAAC,gBAAgB,eAAe,IAAI,CAAC,SAAS;;;SAGxE,CAAA;IACL,CAAC;IAED,gBAAgB;QACZ,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,EAAE,CAAA;IACxB,CAAC;CAUJ;AAlCG;IADC,KAAK,EAAE;8BACK,MAAM;kDAAK;AAGxB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;gDACb","sourcesContent":["import { LitElement, html } from \"lit\"\nimport { property, state } from \"lit/decorators\";\nimport { guard } from \"lit/directives/guard\"\n\nexport class BillAmountBox extends LitElement {\n\n    // @property({ type: Number})\n    @state()\n    amountValue: Number = 0;\n\n    @property({ type: Number })\n    increment = 0;\n\n    render() {\n        return html`\n        <span>\n            <slot name=\"billAmount\"></slot>\n            <input type=\"text\" \n            placeholder=\"Enter amount...\" \n            .value=${this.amountValue}\n            @input=${this.onBillAmountChange}\n            // ${guard([this.amountValue], () => this.onBillAmountChange)}\n            >\n              <button @click=${this.incrementCounter}>Increment: ${this.increment}</button>\n        </span>\n       \n        `\n    }\n\n    incrementCounter() {\n        this.increment++;\n        this.requestUpdate()\n    }\n    onBillAmountChange = (e: Event) => {\n        const amount = e.target as HTMLInputElement;\n        this.amountValue = Number(amount.value);\n        this.dispatchEvent(new CustomEvent('amount-changed', {\n            detail: { amount: this.amountValue },\n            bubbles: true,\n            composed: true\n        }))\n    }\n}\n\n\n"]}