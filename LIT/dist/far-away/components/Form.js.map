{"version":3,"file":"Form.js","sourceRoot":"","sources":["../../../src/far-away/components/Form.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACjD,OAAO,EAAkB,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3C,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAQ,SAAS,EAAE,MAAM,oBAAoB,CAAC;AACrD,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAGhD,MAAa,IAAK,SAAQ,cAAc;IAAxC;;QAKI;;;;mBAAW,CAAC;WAAC;QAGb;;;;mBAAc,EAAE;WAAC;QA6CjB;;;;mBAAwB,CAAC,CAAQ,EAAE,EAAE;gBACjC,MAAM,SAAS,GAAG,CAAC,CAAC,MAA2B,CAAC;gBAChD,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChD,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC;YACxC,CAAC;WAAA;QACD;;;;mBAAgB,CAAC,CAAQ,EAAE,EAAE;gBACzB,MAAM,KAAK,GAAG,CAAC,CAAC,MAA0B,CAAC;gBAC3C,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACzC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,SAAS,CAAC;YAC3C,CAAC;WAAA;IAgBL,CAAC;IAnEG,cAAc;QACV,OAAO,IAAI,CAAA;;;wBAGK,IAAI,CAAC,QAAQ;;yBAEZ,IAAI,CAAC,qBAAqB;;kBAEjC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CACtD,IAAI,CAAA;qCACiB,CAAC,KAAK,CAAC,WAAW,CACtC;;;;SAIR,CAAA;IACL,CAAC;IAED,oBAAoB;QAChB,OAAO,IAAI,CAAA;;kDAE+B,IAAI,CAAC,WAAW;yBACzC,IAAI,CAAC,aAAa;;;SAGlC,CAAA;IACL,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAA;;sBAEG,IAAI,CAAC,YAAY;;;kBAGrB,IAAI,CAAC,cAAc,EAAE;;kBAErB,IAAI,CAAC,oBAAoB,EAAE;;;aAGhC,CAAA;IACT,CAAC;IAYD,YAAY,CAAC,KAAY;QACrB,KAAK,CAAC,cAAc,EAAE,CAAC,CAAA,oCAAoC;QAC3D,IAAG,IAAI,CAAC,WAAW,KAAK,EAAE;YAAC,OAAO;QAClC,MAAM,OAAO,GAAQ;YACjB,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE;YACd,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAC,KAAK;SACf,CAAA;QACD,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;QACvC,SAAS,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA;QACjC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;IACnC,CAAC;;AAzEe;;;;WAAO,CAAC,QAAQ,CAAC;EAAX,CAAY;AAGlC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;sCACd;AAGb;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;yCACV;SARR,IAAI","sourcesContent":["import { MobxLitElement } from \"@adobe/lit-mobx\";\nimport { CSSResultGroup, html } from \"lit\";\nimport { formStore } from \"../store/FormStore\";\nimport { Item, itemStore } from \"../store/ItemStore\";\nimport { property } from \"lit/decorators\";\nimport { form_css } from \"../css/form-page.css\";\n\n\nexport class Form extends MobxLitElement {\n\n    static readonly styles=[form_css];\n\n    @property({ type: Number })\n    quantity = 1;\n\n    @property({ type: String })\n    description = \"\";\n\n\n    renderItemList() {\n        return html`\n            <span>\n               <select \n               value=\"${this.quantity}\"\n               class=\"item-count-selector\"\n               @change=${this.handleItemCountChange}\n               >\n                ${Array.from({ length: 10 }, (_, i) => i + 1).map(n =>\n                html`\n                    <option value=\"${n}\">${n}</option>`\n                )}\n               </select>\n            </span>\n\n        `\n    }\n\n    renderItemInputField() {\n        return html`\n            <span>\n                <input name=\"input-item\" value=\"${this.description}\" placeholder=\"Enter item ...\"\n                @input=${this.onInputChange}\n                ></input>\n            </span>\n        `\n    }\n\n    render() {\n        return html`\n            <form class=\"form\"\n            @submit=${this.onFormSubmit}\n            >\n                <slot name=\"item-list-text\" class=\"item-count\"></slot>\n                ${this.renderItemList()}\n                <slot name=\"input-field-text\"></slot>\n                ${this.renderItemInputField()}\n                <button>Add</button>\n            </form>\n            `\n    }\n\n    handleItemCountChange = (e: Event) => {\n        const itemCount = e.target as HTMLSelectElement;\n        formStore.setItemCount(Number(itemCount.value));\n        this.quantity = formStore.itemCount;\n    }\n    onInputChange = (e: Event) => {\n        const input = e.target as HTMLInputElement;\n        formStore.setItemInputValue(input.value);\n        this.description = formStore.itemValue;\n    }\n    onFormSubmit(event: Event) {\n        event.preventDefault();//do not render by default on submit\n        if(this.description === \"\")return;\n        const newItem:Item = {\n            id: Date.now(),\n            description: this.description,\n            quantity: this.quantity,\n            packed:false\n        }\n        console.log(\"added new item\", newItem);\n        itemStore.addItemsToList(newItem)\n        console.log(itemStore.itemList)\n    }\n      \n\n}"]}