{"version":3,"file":"PackingList.js","sourceRoot":"","sources":["../../../src/far-away/components/PackingList.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACjD,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAkB,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3C,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,GAAG,EAAE,MAAM,oBAAoB,CAAC;AAIzC,MAAa,WAAY,SAAQ,cAAc;IAA/C;;QA+BI;;;;mBAAc,CAAC,EAAS,EAAC,EAAE;gBACvB,SAAS,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;YACrC,CAAC;WAAA;IAGL,CAAC;IAhCG,gBAAgB;IAEhB,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAA;;;sBAGG,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,EAAE,CACnC,IAAI,CAAA;;;uCAGe,IAAI,CAAC,MAAM;qCACb,GAAE,EAAE,CAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;;wEAEG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW;;qCAEzH,GAAE,EAAE,CAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC;;8BAErC,CAAC;;;SAGtB,CAAA;IACL,CAAC;IACD,cAAc,CAAC,EAAU;QACrB,SAAS,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAClC,CAAC;;AA7Be;;;;WAAS,CAAC,WAAW,CAAC;EAAhB,CAAgB;SAD7B,WAAW;AAqCxB,6BAA6B","sourcesContent":["import { MobxLitElement } from \"@adobe/lit-mobx\";\nimport { itemStore } from \"../store/ItemStore\";\nimport { CSSResultGroup, html } from \"lit\";\nimport { packing_css } from \"../css/packing-items.css\";\nimport { map } from \"lit/directives/map\";\nimport { state } from \"lit/decorators\";\n\n\nexport class PackingList extends MobxLitElement {\n    static readonly styles = [packing_css]\n\n\n    renderAddedItems() {\n\n    }\n\n    render() {\n        return html`\n            <div class=\"list\">\n                <ul>\n                    ${map(itemStore.itemList, (item) =>\n                    html`\n                        <li> \n                            <input type=\"checkbox\" \n                            ?checked=${item.packed}\n                            @click=${()=>this.toggleCheckBox(item.id)}\n                            />\n                            <span class=\"item-list-description\" style=${item.packed ? \"text-decoration:line-through\" : \"\"}>${item.quantity} ${item.description}</span>\n                            <button \n                            @click=${()=>this.onRemoveItem(item.id)}\n                            >‚ùå</button>\n                        </li>`)}\n                </ul>        \n            </div>\n        `\n    }\n    toggleCheckBox(id: number) {\n        itemStore.toggleItemState(id);\n    }\n    onRemoveItem= (id:number)=>{\n        itemStore.removeItemFromList(id);\n    }\n\n\n}\n//// <button>&times;</button>"]}