{"version":3,"sources":["ToDoItem.js"],"names":["template","document","createElement","innerHTML","TodoItems","_HTMLElement","_this","_classCallCheck","_callSuper","shadow","attachShadow","mode","append","content","cloneNode","checkbox","querySelector","_inherits","_createClass","key","value","connectedCallback","console","log","disconnectedCallback","attributeChangedCallback","name","oldVal","newVal","updatedChecked","concat","checked","get","_wrapNativeSuper","HTMLElement","customElements","define","item","remove"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;AACnDF,QAAQ,CAACG,SAAS,+ZA0BjB;AAAC,IACIC,SAAS,0BAAAC,YAAA;EACb,SAAAD,UAAA,EAAc;IAAA,IAAAE,KAAA;IAAAC,eAAA,OAAAH,SAAA;IACZE,KAAA,GAAAE,UAAA,OAAAJ,SAAA;IACA,IAAMK,MAAM,GAAGH,KAAA,CAAKI,YAAY,CAAC;MAAEC,IAAI,EAAE;IAAO,CAAC,CAAC;IAClDF,MAAM,CAACG,MAAM,CAACZ,QAAQ,CAACa,OAAO,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC/CR,KAAA,CAAKS,QAAQ,GAAGN,MAAM,CAACO,aAAa,CAAC,OAAO,CAAC;IAC7C;IAAA,OAAAV,KAAA;EACF;;EAEA;AACF;AACA;EAFEW,SAAA,CAAAb,SAAA,EAAAC,YAAA;EAAA,OAAAa,YAAA,CAAAd,SAAA;IAAAe,GAAA;IAAAC,KAAA,EAOA,SAAAC,iBAAiBA,CAAA,EAAE;MACjBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAED,SAAAI,oBAAoBA,CAAA,EAAE;MACpBF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC7B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAJ,GAAA;IAAAC,KAAA,EAMA,SAAAK,wBAAwBA,CAACC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAE;MAC3C,IAAIF,IAAI,KAAK,SAAS,EAAE,IAAI,CAACG,cAAc,CAACD,MAAM,CAAC;MACnDN,OAAO,CAACC,GAAG,SAAAO,MAAA,CAASJ,IAAI,eAAAI,MAAA,CAAYH,MAAM,eAAAG,MAAA,CAAYF,MAAM,CAAE,CAAC;IACnE;EAAC;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAS,cAAcA,CAACT,KAAK,EAAE;MACpB,IAAI,CAACL,QAAQ,CAACgB,OAAO,GAAGX,KAAK,IAAI,IAAI,IAAIA,KAAK,KAAK,OAAO;IAC5D;EAAC;IAAAD,GAAA;IAAAa,GAAA,EAzBD,SAAAA,IAAA,EAAgC;MAC9B,OAAO,CAAC,SAAS,CAAC;IACpB;EAAC;AAAA,gBAAAC,gBAAA,CAdqBC,WAAW;AA0CnCC,cAAc,CAACC,MAAM,CAAC,YAAY,EAAEhC,SAAS,CAAC;AAC9C,IAAMiC,IAAI,GAAGpC,QAAQ,CAACe,aAAa,CAAC,YAAY,CAAC;AACjD,IAAIe,OAAO,GAAG,IAAI;AAElBM,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAEf;AACA;AACA;AACA;;AAEA","file":"ToDoItem.ddc7bcab.js","sourceRoot":"../WEBCOMPONENT","sourcesContent":["const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<style>\n    h3 {color:green}\n</style> \n<style>\n    label {\n    color:red;\n    display:block;\n    }\n</style> \n<style>\n    .description {\n    font-size: .65 rem;\n    font-weight: lighter;\n    color:Green;\n    }\n</style> \n\n<label>\n    <input type=\"checkbox\"/>\n    <slot></slot>\n    <span class=\"description\">\n        <slot name=\"description\">\n        </slot>\n    </span>\n</label>\n`;\nclass TodoItems extends HTMLElement {\n  constructor() {\n    super();\n    const shadow = this.attachShadow({ mode: \"open\" });\n    shadow.append(template.content.cloneNode(true));\n    this.checkbox = shadow.querySelector(\"input\");\n    // this.innerHTML = `<style>h3 {color:green}</style> <h3  class=\"todo-items-lists\">${this.innerText}</h3>`;\n  }\n\n  /**\n   *  You specify which attributes to monitor.\n   */\n  static get observedAttributes() {\n    return [\"checked\"];\n  }\n\n  connectedCallback(){\n    console.log('connected');\n  }\n\n  disconnectedCallback(){\n    console.log('disconnected');\n  }\n\n  /**\n   * No, attributeChangedCallback is not a user-defined function.\n   * It is a built-in lifecycle method in the Web Components API.\n   * This method is automatically called when one of the\n   * observed attributes of a custom element is added, removed, or changed.\n   */\n  attributeChangedCallback(name, oldVal, newVal) {\n      if (name === \"checked\") this.updatedChecked(newVal);\n      console.log(`name:${name}, oldVal:${oldVal}, newVal:${newVal}`);\n  }\n\n  updatedChecked(value) {\n    this.checkbox.checked = value != null && value !== \"false\";\n  }\n\n\n}\n\ncustomElements.define(\"todo-items\", TodoItems);\nconst item = document.querySelector('todo-items');\nlet checked = true;\n\nitem.remove(); // this wil call webcomponent inbuild disconnected callback\n\n// let myInterval = setInterval(()=> {\n//     checked = !checked;\n//     item.setAttribute('checked', checked);\n// },500)\n\n// clearInterval(myInterval)\n"]}