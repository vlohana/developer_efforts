{"version":3,"sources":["CountElemLifeCycle-v2.js"],"names":["CountElementLifecycleMethods","_HTMLElement","_this","_classCallCheck","_callSuper","_defineProperty","console","log","_shadowRoot","attachShadow","mode","innerHTML","countElement","querySelector","decrementMethod","incrementMethod","_inherits","_createClass","key","get","getAttribute","set","value","setAttribute","removeAttribute","connectedCallback","count","initialvalue","innerText","addEventListener","decrementValue","bind","incrementValue","attributeChangedCallback","name","oldValue","newValue","concat","disconnectedCallback","removeEventListener","steps","_wrapNativeSuper","HTMLElement","customElements","define"],"mappings":"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","file":"CountElemLifeCycle-v2.2421af59.js","sourceRoot":"../WEBCOMPONENT/webc","sourcesContent":["// + {count} -\n// attribute - steps - 1,5 initalValue = 0,1,2\n\nclass CountElementLifecycleMethods extends HTMLElement {\n  static get observedAttributes() {\n    return ['steps', 'initialvalue'];\n  }\n  // get/set for attributes\n  get initialvalue() {\n    return this.getAttribute('initialvalue')\n  }\n  set initialvalue(value) {\n    if (value) {\n      this.setAttribute('initialvalue');\n    } else {\n      this.removeAttribute('initialvalue')\n    }\n  }\n  //<countelement-lifecyclemethods initialValue=\"2\" steps=\"4\"></countelement-lifecyclemethods>\n\n  get steps() {\n    return this.getAttribute('steps')\n  }\n  set steps(value) {\n    if (value) {\n      this.setAttribute('steps');\n    } else {\n      this.removeAttribute('steps')\n    }\n  }\n  // define attributes\n  countElement\n  decrementMethod\n  incrementMethod\n\n  constructor() {\n    super();\n    console.log('constructor method');\n\n    this._shadowRoot = this.attachShadow({mode: 'open'});\n    this._shadowRoot.innerHTML = `\n    <button id=\"decrement\">-</button>\n    <span id=\"count\">0</span>\n    <button id=\"increment\">+</button>\n    `\n    this.countElement = this._shadowRoot.querySelector('#count');\n    this.decrementMethod = this._shadowRoot.querySelector('#decrement');\n    this.incrementMethod = this._shadowRoot.querySelector('#increment');\n  }\n\n  connectedCallback() {\n    console.log('connectedCallback method');\n    this.count = this.initialvalue || 0;\n    this.countElement.innerText = this.count;\n\n    this.decrementMethod.addEventListener(\"click\", this.decrementValue.bind(this));\n    this.incrementMethod.addEventListener(\"click\", this.incrementValue.bind(this));\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    console.log(`${name}'s changed from ${oldValue} to ${newValue}`);\n  }\n\n  disconnectedCallback() {\n    console.log('disconnectedCallback method');\n    this.decrementMethod.removeEventListener(\"click\", this.decrementValue.bind(this));\n    this.incrementMethod.removeEventListener(\"click\", this.incrementValue.bind(this));\n  }\n\n  decrementValue() {\n    this.count = +this.count - +this.steps || 1;\n    this.countElement.innerText = this.count;\n  }\n\n  incrementValue() {\n    this.count = +this.count + +this.steps || 1;\n    this.countElement.innerText = this.count;\n  }\n}\n\ncustomElements.define(\"countelement-lifecyclemethods\", CountElementLifecycleMethods);"]}