{"version":3,"sources":["CountElemLifeCycle.js"],"names":["template","document","createElement","innerHTML","CountElemLifeCycle","_HTMLElement","_this","_classCallCheck","_callSuper","_defineProperty","shadow","attachShadow","mode","append","content","cloneNode","countElem","querySelector","decrementButton","incrementButton","_inherits","_createClass","key","get","console","log","getAttribute","set","value","setAttribute","removeAttribute","connectedCallback","count","initialValue","innerText","addEventListener","decrementCountByStep","bind","incrementCountByStep","diconnectCallback","removeEventListener","Number","steps","attributeChangedCallback","name","oldVal","newVal","concat","_wrapNativeSuper","HTMLElement","customElements","define"],"mappings":"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","file":"CountElemLifeCycle.a68aea7c.js","sourceRoot":"../WEBCOMPONENT/webc","sourcesContent":["const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<div>\n    <button id=\"decrement\">-</button>\n    <span id=\"count\">0</span>\n    <button id=\"increment\">+</button>\n</div>\n`;\n\nclass CountElemLifeCycle extends HTMLElement {\n  countElem;\n  decrementButton;\n  incrementButton;\n\n  constructor() {\n    super();\n    const shadow = this.attachShadow({ mode: \"open\" });\n    shadow.append(template.content.cloneNode(true));\n    this.countElem = shadow.querySelector(\"#count\");\n    this.decrementButton = shadow.querySelector(\"#decrement\");\n    this.incrementButton = shadow.querySelector(\"#increment\");\n  }\n\n  get steps() {\n    console.log(\"steps: \", this.getAttribute(\"steps\"));\n    return this.getAttribute(\"steps\");\n  }\n\n  set steps(value) {\n    if (value) {\n      this.setAttribute(\"steps\", value);\n    } else {\n      this.removeAttribute(\"steps\");\n    }\n  }\n\n  get initialValue() {\n    return this.getAttribute(\"initialValue\");\n  }\n\n  set initialValue(value) {\n    if (value) {\n      this.setAttribute(\"initialValue\", value);\n    } else {\n      this.removeAttribute(\"initialValue\");\n    }\n  }\n\n  connectedCallback() {\n    console.log(\"connected callback\");\n    this.count = this.initialValue || 0;\n    this.countElem.innerText = this.count;\n    console.log(\"count: \", this.count);\n    this.decrementButton.addEventListener(\n      \"click\",\n      this.decrementCountByStep.bind(this)\n    );\n    this.incrementButton.addEventListener(\n      \"click\",\n      this.incrementCountByStep.bind(this)\n    );\n  }\n\n  diconnectCallback() {\n    this.decrementButton.removeEventListener(\n      \"click\",\n      this.decrementCountByStep.bind(this)\n    );\n    this.incrementButton.removeEventListener(\n      \"click\",\n      this.incrementCountByStep.bind(this)\n    );\n  }\n\n  decrementCountByStep() {\n    this.count = Number(this.count) - Number(this.steps);\n    if (Number(this.count) > 0) {\n      this.countElem.innerText = this.count;\n    } else {\n      this.count = this.initialValue;\n      this.countElem.innerText = this.count;\n    }\n  }\n\n  incrementCountByStep() {\n    this.count = Number(this.count) + Number(this.steps);\n    this.countElem.innerText = this.count;\n  }\n\n  static get observedAttributes() {\n    return [\"steps\", \"initialvalue\"];\n  }\n\n  attributeChangedCallback(name, oldVal, newVal) {\n    console.log(`name:${name}, oldVal:${oldVal}, newVal:${newVal}`);\n  }\n}\ncustomElements.define(\"count-element-life-cycle\", CountElemLifeCycle);\n"]}