{"version":3,"sources":["ExpandableList.js"],"names":["ExpandableList","_HTMLUListElement","_this","_classCallCheck","_callSuper","style","position","toggleBtn","document","createElement","border","background","padding","top","left","cursor","innerText","addEventListener","dataset","expanded","isExpanded","appendChild","_inherits","_createClass","key","get","value","attributeChangedCallback","name","oldValue","newValue","updateStyles","connectedCallback","disconnectedCallback","console","log","_this2","transform","_toConsumableArray","children","forEach","child","display","_wrapNativeSuper","HTMLUListElement","customElements","define","extends"],"mappings":"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","file":"ExpandableList.5c02f4fd.js","sourceRoot":"../WEBCOMPONENT","sourcesContent":["/**\n * Customise existing listener.\n */\nclass ExpandableList extends HTMLUListElement {\n  constructor() {\n    super();\n    this.style.position = \"relative\";\n    this.toggleBtn = document.createElement(\"button\");\n    this.toggleBtn.style.position = \"absolute\";\n    this.toggleBtn.style.border = \"none\";\n    this.toggleBtn.style.background = \"none\";\n    this.toggleBtn.style.padding = 0;\n    this.toggleBtn.style.top = 0;\n    this.toggleBtn.style.left = \"5px\";\n    this.toggleBtn.style.cursor = \"pointer\";\n    this.toggleBtn.innerText = \">\";\n\n    this.toggleBtn.addEventListener(\"click\", () => {\n      this.dataset.expanded = !this.isExpanded;\n    });\n    this.appendChild(this.toggleBtn);\n  }\n\n  get isExpanded() {\n    return this.dataset.expanded !== \"false\" && this.dataset.expanded !== null;\n  }\n\n  static get observedAttributes() {\n    return [\"data-expanded\"];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    this.updateStyles();\n  }\n\n  connectedCallback() {\n    this.updateStyles();\n  }\n  disconnectedCallback() {\n    console.log(\"disconnected\");\n  }\n\n  updateStyles() {\n    console.log(this.isExpanded);\n    const transform = this.isExpanded ? \"rotate(90deg)\" : \"\";\n    this.toggleBtn.style.transform = transform;\n    [...this.children].forEach((child) => {\n      if (child !== this.toggleBtn) {\n        child.style.display = this.isExpanded ? \"\" : \"none\";\n      }\n    });\n  }\n}\ncustomElements.define(\"vexpanded-list\", ExpandableList, { extends: \"ul\" });\n"]}